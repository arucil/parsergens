---
source: lr/src/build_lalr.rs
expression: builder.states(&start_nts)
---
State 0 (start)
E -> . T E'      $
T -> . F T'      plus / $
F -> . num      plus / mult / $
F -> . lparen E rparen      plus / mult / $
_E -> . E      $

State 1
E -> T . E'      rparen / $
E' -> . plus T E'      rparen / $
E' -> .      rparen / $

State 2
T -> F . T'      plus / rparen / $
T' -> . mult F T'      plus / rparen / $
T' -> .      plus / rparen / $

State 3
F -> num .      plus / mult / rparen / $

State 4
E -> . T E'      rparen
T -> . F T'      plus / rparen
F -> . num      plus / mult / rparen
F -> . lparen E rparen      plus / mult / rparen
F -> lparen . E rparen      plus / mult / rparen / $

State 5
_E -> E .      $

State 6
E -> T E' .      rparen / $

State 7
E' -> plus . T E'      rparen / $
T -> . F T'      plus / rparen / $
F -> . num      plus / mult / rparen / $
F -> . lparen E rparen      plus / mult / rparen / $

State 8
T -> F T' .      plus / rparen / $

State 9
T' -> mult . F T'      plus / rparen / $
F -> . num      plus / mult / rparen / $
F -> . lparen E rparen      plus / mult / rparen / $

State 10
F -> lparen E . rparen      plus / mult / rparen / $

State 11
E' -> . plus T E'      rparen / $
E' -> plus T . E'      rparen / $
E' -> .      rparen / $

State 12
T' -> . mult F T'      plus / rparen / $
T' -> mult F . T'      plus / rparen / $
T' -> .      plus / rparen / $

State 13
F -> lparen E rparen .      plus / mult / rparen / $

State 14
E' -> plus T E' .      rparen / $

State 15
T' -> mult F T' .      plus / rparen / $


