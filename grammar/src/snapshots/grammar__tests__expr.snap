---
source: grammar/src/lib.rs
expression: build(input)
---
Ok(
    Grammar {
        rules: [
            Rule {
                nt: NonterminalId(
                    0,
                ),
                items: [
                    Nonterminal(
                        NonterminalId(
                            0,
                        ),
                    ),
                    Token(
                        TokenId(
                            0,
                        ),
                    ),
                    Nonterminal(
                        NonterminalId(
                            0,
                        ),
                    ),
                ],
                prec: None,
                action: None,
            },
            Rule {
                nt: NonterminalId(
                    0,
                ),
                items: [
                    Nonterminal(
                        NonterminalId(
                            0,
                        ),
                    ),
                    Token(
                        TokenId(
                            1,
                        ),
                    ),
                    Nonterminal(
                        NonterminalId(
                            0,
                        ),
                    ),
                ],
                prec: None,
                action: None,
            },
            Rule {
                nt: NonterminalId(
                    0,
                ),
                items: [
                    Nonterminal(
                        NonterminalId(
                            0,
                        ),
                    ),
                    Token(
                        TokenId(
                            2,
                        ),
                    ),
                    Nonterminal(
                        NonterminalId(
                            0,
                        ),
                    ),
                ],
                prec: None,
                action: None,
            },
            Rule {
                nt: NonterminalId(
                    0,
                ),
                items: [
                    Nonterminal(
                        NonterminalId(
                            0,
                        ),
                    ),
                    Token(
                        TokenId(
                            3,
                        ),
                    ),
                    Nonterminal(
                        NonterminalId(
                            0,
                        ),
                    ),
                ],
                prec: None,
                action: None,
            },
            Rule {
                nt: NonterminalId(
                    0,
                ),
                items: [
                    Nonterminal(
                        NonterminalId(
                            1,
                        ),
                    ),
                ],
                prec: None,
                action: None,
            },
            Rule {
                nt: NonterminalId(
                    1,
                ),
                items: [
                    Token(
                        TokenId(
                            7,
                        ),
                    ),
                ],
                prec: None,
                action: Some(
                    "{ (__0) . parse ::< f64 > () . unwrap () }",
                ),
            },
            Rule {
                nt: NonterminalId(
                    1,
                ),
                items: [
                    Token(
                        TokenId(
                            4,
                        ),
                    ),
                    Nonterminal(
                        NonterminalId(
                            0,
                        ),
                    ),
                    Token(
                        TokenId(
                            5,
                        ),
                    ),
                ],
                prec: None,
                action: Some(
                    "{ (__1) }",
                ),
            },
            Rule {
                nt: NonterminalId(
                    1,
                ),
                items: [
                    Token(
                        TokenId(
                            1,
                        ),
                    ),
                    Nonterminal(
                        NonterminalId(
                            1,
                        ),
                    ),
                ],
                prec: None,
                action: None,
            },
            Rule {
                nt: NonterminalId(
                    1,
                ),
                items: [
                    Token(
                        TokenId(
                            8,
                        ),
                    ),
                ],
                prec: None,
                action: None,
            },
            Rule {
                nt: NonterminalId(
                    1,
                ),
                items: [
                    Token(
                        TokenId(
                            8,
                        ),
                    ),
                    Token(
                        TokenId(
                            4,
                        ),
                    ),
                    Nonterminal(
                        NonterminalId(
                            2,
                        ),
                    ),
                    Token(
                        TokenId(
                            5,
                        ),
                    ),
                ],
                prec: None,
                action: None,
            },
            Rule {
                nt: NonterminalId(
                    2,
                ),
                items: [],
                prec: None,
                action: None,
            },
            Rule {
                nt: NonterminalId(
                    2,
                ),
                items: [
                    Nonterminal(
                        NonterminalId(
                            0,
                        ),
                    ),
                    Many(
                        [
                            Token(
                                TokenId(
                                    6,
                                ),
                            ),
                            Nonterminal(
                                NonterminalId(
                                    0,
                                ),
                            ),
                        ],
                    ),
                ],
                prec: None,
                action: None,
            },
        ],
        start_nts: {
            NonterminalId(
                0,
            ),
        },
        nts: {
            NonterminalId(
                0,
            ): "expr",
            NonterminalId(
                1,
            ): "factor",
            NonterminalId(
                2,
            ): "param-list",
        },
        nt_metas: {
            NonterminalId(
                0,
            ): NonterminalMetadata {
                range: 0..5,
                ty: None,
            },
            NonterminalId(
                1,
            ): NonterminalMetadata {
                range: 5..10,
                ty: Some(
                    "Expr",
                ),
            },
            NonterminalId(
                2,
            ): NonterminalMetadata {
                range: 10..12,
                ty: None,
            },
        },
        lexer: Some(
            Lexer {
                dfa: TabularDfa {
                    start: 11,
                    state_disp: [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        3,
                        17,
                        21,
                    ],
                    transitions: [
                        (
                            0,
                            0,
                        ),
                        (
                            0,
                            0,
                        ),
                        (
                            0,
                            0,
                        ),
                        (
                            0,
                            0,
                        ),
                        (
                            0,
                            0,
                        ),
                        (
                            0,
                            0,
                        ),
                        (
                            0,
                            0,
                        ),
                        (
                            0,
                            0,
                        ),
                        (
                            0,
                            0,
                        ),
                        (
                            0,
                            0,
                        ),
                        (
                            0,
                            0,
                        ),
                        (
                            0,
                            0,
                        ),
                        (
                            9,
                            11,
                        ),
                        (
                            7,
                            8,
                        ),
                        (
                            9,
                            10,
                        ),
                        (
                            7,
                            8,
                        ),
                        (
                            10,
                            11,
                        ),
                        (
                            7,
                            8,
                        ),
                        (
                            11,
                            9,
                        ),
                        (
                            7,
                            8,
                        ),
                        (
                            11,
                            9,
                        ),
                        (
                            10,
                            0,
                        ),
                        (
                            11,
                            5,
                        ),
                        (
                            11,
                            6,
                        ),
                        (
                            11,
                            3,
                        ),
                        (
                            11,
                            1,
                        ),
                        (
                            11,
                            7,
                        ),
                        (
                            11,
                            2,
                        ),
                        (
                            11,
                            0,
                        ),
                        (
                            11,
                            4,
                        ),
                        (
                            11,
                            10,
                        ),
                        (
                            11,
                            0,
                        ),
                        (
                            11,
                            8,
                        ),
                        (
                            11,
                            0,
                        ),
                        (
                            11,
                            0,
                        ),
                        (
                            11,
                            0,
                        ),
                        (
                            11,
                            8,
                        ),
                        (
                            12,
                            0,
                        ),
                        (
                            12,
                            0,
                        ),
                        (
                            12,
                            0,
                        ),
                        (
                            12,
                            0,
                        ),
                    ],
                    accept_states: {
                        State(0): TokenId(
                            0,
                        ),
                        State(1): TokenId(
                            1,
                        ),
                        State(2): TokenId(
                            2,
                        ),
                        State(3): TokenId(
                            3,
                        ),
                        State(4): TokenId(
                            4,
                        ),
                        State(5): TokenId(
                            5,
                        ),
                        State(6): TokenId(
                            6,
                        ),
                        State(7): TokenId(
                            8,
                        ),
                        State(8): TokenId(
                            9,
                        ),
                        State(9): TokenId(
                            7,
                        ),
                        State(10): TokenId(
                            7,
                        ),
                    },
                },
                char_intervals: [
                    0,
                    10,
                    11,
                    32,
                    33,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    58,
                    65,
                    91,
                    95,
                    96,
                    97,
                    123,
                ],
                skip: {
                    TokenId(
                        9,
                    ),
                },
            },
        ),
        tokens: {
            TokenId(
                0,
            ): "PLUS",
            TokenId(
                1,
            ): "MINUS",
            TokenId(
                2,
            ): "MUL",
            TokenId(
                3,
            ): "DIV",
            TokenId(
                4,
            ): "LPAREN",
            TokenId(
                5,
            ): "RPAREN",
            TokenId(
                6,
            ): "COMMA",
            TokenId(
                7,
            ): "NUMBER",
            TokenId(
                8,
            ): "IDENT",
        },
        user_code: [],
        user_state: [],
    },
)
