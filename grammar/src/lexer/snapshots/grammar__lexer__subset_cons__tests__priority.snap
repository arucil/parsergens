---
source: grammar/src/lexer/subset_cons.rs
expression: "(nfa, dfa)"
---
(
    Nfa {
        transitions: {
            (
                State(0),
                None,
            ): {
                State(1),
                State(2),
            },
            (
                State(1),
                Some(
                    '0',
                ),
            ): {
                State(1),
            },
            (
                State(1),
                Some(
                    '1',
                ),
            ): {
                State(1),
            },
            (
                State(2),
                Some(
                    '0',
                ),
            ): {
                State(2),
            },
            (
                State(2),
                Some(
                    '1',
                ),
            ): {
                State(2),
            },
            (
                State(2),
                Some(
                    'a',
                ),
            ): {
                State(2),
            },
            (
                State(2),
                Some(
                    'b',
                ),
            ): {
                State(2),
            },
        },
        state_letters: {
            State(1): {
                '0',
                '1',
            },
            State(2): {
                '0',
                '1',
                'a',
                'b',
            },
        },
        accept_states: {
            State(1): (
                2,
                "number",
            ),
            State(2): (
                1,
                "symbol",
            ),
        },
    },
    Dfa {
        start: 0,
        transitions: {
            (
                State(0),
                '0',
            ): State(1),
            (
                State(0),
                '1',
            ): State(1),
            (
                State(0),
                'a',
            ): State(2),
            (
                State(0),
                'b',
            ): State(2),
            (
                State(1),
                '0',
            ): State(1),
            (
                State(1),
                '1',
            ): State(1),
            (
                State(1),
                'a',
            ): State(2),
            (
                State(1),
                'b',
            ): State(2),
            (
                State(2),
                '0',
            ): State(2),
            (
                State(2),
                '1',
            ): State(2),
            (
                State(2),
                'a',
            ): State(2),
            (
                State(2),
                'b',
            ): State(2),
        },
        accept_states: {
            State(0): "number",
            State(1): "number",
            State(2): "symbol",
        },
    },
)
